{
  "app": {
    "name": "AppsGate",
    "signin": "Identification",
    "loading": "Loading..."
  },
  "debugger": {
    "all": "All",
    "times": "times",
    "yes": "YES",
    "no": "NO",
    "toolbar": {
      "history": "History",
      "live": "Live"
    }
  },
  "dependancy": {
        "refresh-data" : "Refresh data",
        "synchronize" : "Start sync",
        "unsynchronize" : "Stop sync",
        "search-label" : "Search : ",
	  	"search-button": "OK",
	  	"search-example": "(Example : '__entity__')",
		"unfix-node": "Cancel the repositioning",
	  	"caption": {
			"title": "Caption",
			"title-program": "Program State",
			"title-device": "Device State",
			"stopped-program": "Stopped",
			"running-program": "Active",
			"valid-program": "Ready",
			"incomplete-program": "Unstable",
			"invalid-program": "Invalid",
			"device-on": "Device On",
			"device-off": "Device Off",
			"device-multiple-reference": "Multiple state change"
		},
	  	"help" : {
			"title": "Help",
			"click": "Click an entity : Cancel its repositioning",
			"click-move": "Drag-Move an entity: Reposition an entity",
			"double-click": "Double Click an entity : Focus/Unfocus an entity",
			"maj-click": "Shift + Click : Go to the entity's detailed page",
			"hovering-entity": "Hovering an entity : Highlight its relations",
			"click-relation": "Click a relation : Get information about a relation"
		},
	  	"type": {
			"entity": {
				"place": "$t(navbar.places)",
				"program": "$t(navbar.programs)",
				"service": "$t(navbar.services)",
				"time": {
					"filter-label": "Time",
					"clock": "Clock",
					"schedule": "Scheduler"
				},
				"device": "$t(navbar.devices)",
				"selector": {
					"filter-label" : "Selectors",
					"default" : "Selector",
					"type-0": "$t(devices.temperature.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-1": "$t(devices.illumination.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-2": "$t(devices.switch.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-3": "$t(devices.contact.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-4": "$t(devices.cardswitch.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-5": "$t(devices.ard.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-6": "$t(devices.plug.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-7": "$t(devices.lamp.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-8": "$t(devices.actuator.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-31": "$t(devices.mediaplayer.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-124": "$t(devices.tv.name.plural) $t(dependancy.type.entity.selector.default)",
					"type-210": "$t(devices.domicube.name.plural) $t(dependancy.type.entity.selector.default)"
				} 
			},
			"relation": {
				"reference": "Commands",
				"reference-WRITING": "Reading",
				"reference-READING": "Writing",
				"isLocatedIn": "Location",
				"isPlanified": "Planning",
				"denotes": "Denotation"
			}
		},
	  	"filters-label": {
				"entity": {
					"title": "Filter for entities",
					"place": "$t(dependancy.type.entity.place)",
					"program": "$t(dependancy.type.entity.program)",
					"service": "$t(dependancy.type.entity.service)",
					"time": "$t(dependancy.type.entity.time.filter-label)",
					"device": "$t(dependancy.type.entity.device)",
					"selector": "$t(dependancy.type.entity.selector.filter-label)",
					"device-type": {
						"title": "Types",
						"all": "All",
						"none": "None",
						"0": "$t(devices.temperature.name.plural)",
						"1": "$t(devices.illumination.name.plural)",
						"2": "$t(devices.switch.name.plural)",
						"3": "$t(devices.contact.name.plural)",
						"4": "$t(devices.cardswitch.name.plural)",
						"5": "$t(devices.ard.name.plural)",
						"6": "$t(devices.plug.name.plural)",
						"7": "$t(devices.lamp.name.plural)",
						"8": "$t(devices.actuator.name.plural)",
						"31": "$t(devices.mediaplayer.name.plural)",
						"32": "$t(devices.co2.name.plural)",
						"36": "$t(devices.mediaplayer.name.plural)",
						"124": "$t(devices.tv.name.plural)",
						"210": "$t(devices.domicube.name.plural)",
                        "MobileDevice" :  "$t(devices.mobileTasker.name.plural)"
					},
					"device-state": {
						"title": "State",
						"true": "On",
						"false": "Off",
						"isGhostDevice": "Missing",
						"isMultipleTargeted": "Multiple state changes"
					},
					"program-state" : {
						"title": "State",
						"INVALID": "Inactive & Invalid",
						"DEPLOYED": "Inactive & Valid",
						"PROCESSING": "Active & Valid",
						"LIMPING": "Active & Unstable",
						"INCOMPLETE": "Inactive & Unstable",
						"isGhostProgram": "Missing"
					}
				},
				"relation": {
					"title": "Filter for relations",
					"reference": "Referenced entities",
					"WRITING": "State change",
					"READING": "State consultation",
					"isLocatedIn": "Location",
					"isPlanified": "Scheduling",
					"denotes": "Designation"
				}
		}
  },
  "devices": {
    "no-value": "---",
    "missing": "This device is disconnected",
    "actuator": {
      "action": {
        "turnOff": "Turn off",
        "turnOn": "Turn on",
        "turnAllOff": "Turn all off",
        "turnAllOn": "Turn all on"
      },
      "name": {
        "plural": "Actuators",
        "singular": "Actuator"
      },
      "status": {
        "turnedOff": "Off",
        "turnedOn": "On"
      }
    },
    "ard": {
      "affirmative": "Yes",
      "true":"True",
      "false":"False",
      "with-the-value":"with value",
      "action": {
        "zone-activate": "Activate alarm for the zone __myVar__",
        "zone-desactivate": "Desactivate alarm for the zone __myVar__",
        "force-input": "Signal an entry in the central of alarm __myVar__ in zone"
      },
      "keyboard": {
        "zone-activate": "Activate alarm for the zone ...",
        "zone-desactivate": "Desactivate alarm for the zone ...",
        "force-input": "Signal an entry in the central of alarm in zone ...",
        "card_passed":"User badge is recognized"
      },
      "event": {
        "authorized": "a badge is authorized by ...",
        "non_authorized": "a badge is NOT authorized by ...",
        "alarm_fired": "an alarm is detected by ...",
        "card_passed":"Badge of ",
        "card_passed2": " is recognized",
        "any": "Any"
      },
      "last-authorized": "Last badge access granted",
      "last-card": "Last badge passed",
      "last-message": "Last message",
      "last-message-empty": "No message",
      "name": {
        "plural": "ARD",
        "singular": "ARD"
      },
      "negative": "No",
      "state": {
        "authorized": "a badge is authorized by ARD",
        "non_authorized": "a badge is NOT authorized by ARD",
        "alarm_fired": "an alarm is detected by ARD"
      }
    },
    "avg": "Avg : ",
    "clock": {
      "name": {
        "no-name": "System clock unnamed",
        "singular": "System Clock"
      },
      "time-speed-label": "Speed ​​of flow of time"
    },
    "consumption-label": "Consumption",
    "contact": {
      "keyboard": {
        "contact": "contact sensor",
        "closeEvent": "someone closes a __myVar__",
        "isClose": "a __myVar__ is closed",
        "isOpen": "a __myVar__ is open",
        "openEvent": "someone opens a __myVar__"
      },
      "language": {
        "closeEvent": "someone closes __myVar__",
        "isClose": "__myVar__ is closed",
        "isOpen": "__myVar__ is open",
        "openEvent": "someone opens __myVar__"
      },
      "name": {
        "plural": "Contact sensors",
        "singular": "Contact sensor"
      },
      "value": {
        "closed": "Closed",
        "opened": "Open"
      }
    },
    "controls-label": "Controls",
    "device-no-name": "Device unnamed",
    "device-unlocated": "Not located",
    "domicube": {
      "name": {
        "plural": "DomiCubes",
        "singular": "DomiCube"
      },
      "batteryLevel":"Charge of the Battery",
      "status": {
        "inactive": "Inactive",
        "unknown": "Unknown"
      },
      "language": {
        "west": "West",
        "east": "East",
		"change" : "Domicube face changes",
		"newFace" : "someone shows __myVar__ of Domicube",
		"leaveFace" : "someone leaves __myVar__ of Domicube",
		"face" : "Domicube is on __myVar__ face",
        "turn" : "Domicube turns __myVar__"
      },
      "keyboard": {
        "west": "West",
        "east": "East",
		"change" : "Domicube face changes",
		"newFace" : "someone shows __myVar__ of Domicube",
		"leaveFace" : "someone leaves __myVar__ of Domicube",
		"face" : "Domicube is on __myVar__ face",
        "oneface" : "top face",
        "turn" : "Domicube turns"
      },
      "white-face": {
        "first-elem": "White",
        "second-elem": "Face"
      }
    },
    "illumination": {
      "caption": {
        "extern": "External Light sensor",
        "intern": "Internal Light sensor"
      },
      "keyboard": {
        "sensor": "light sensor",
        "brightness": "that level of luminosity",
        "get": "a __myVar__ detects __myVar2__",
        "change": "luminosity measured by a __myVar__ changes"
      },
      "language": {
        "get": "luminosity of __myVar__",
        "change": "luminosity of __myVar__ changes"
      },
      "name": {
        "plural": "Light sensors",
        "singular": "Light sensor"
      },
      "scale": {
        "high": "High luminosity",
        "highest": "Sunlight",
        "low": "Absent or low luminosity",
        "lowest": "Night",
        "medium": "Medium luminosity",
        "veryHigh": "Very high lunimosity",
        "veryLow": "Very low luminosity"
      },
      "scale-label": "Scale"
    },
    "cardswitch": {
      "keyboard": {
        "cardswitch": "key card switch",
        "card-inserted": "a card is inserted in a __myVar__",
        "insertedEvent": "someone inserts a card in a __myVar__",
        "no-card-inserted": "no card in a __myVar__",
        "removedEvent": "someone removes a card from a __myVar__"
      },
      "language": {
        "card-inserted": "a card is inserted in __myVar__",
        "insertedEvent": "someone inserts a card in __myVar__",
        "no-card-inserted": "no card in __myVar__",
        "removedEvent": "someone removes a card from __myVar__"
      },
      "name": {
        "plural": "Card switches",
        "singular": "Card switch"
      },
      "value": {
        "inserted": "card inserted",
        "not-inserted": "no card inserted"
      }
    },
    "clock": {
      "keyboard": {
        "checkCurrentTimeOfDay": "current hour is ",
        "before" : "hour 1",
        "after" : "hour 2"
      },
      "language": {
        "checkCurrentTimeOfDay": "current hour is ",
        "between" : "between",
        "before" : "before",
        "after" : "after",
        "and" : "and"
      }
    },
    "lamp": {
      "action": {
        "blink": "Blink",
        "turnOff": "Turn off",
        "turnOn": "Turn on",
        "turnAllOff": "Turn all off",
        "turnAllOn": "Turn all on",
        "brightness": "Brightness"
      },
      "complement": {
        "change-color": "to",
        "color": "Color",
        "during": "during",
        "speed": "seconds and blink it ",
        "fast":"rapidly",
        "normal":"normally",
        "slow":"slowly",
        "luminosity-change":" to ",
        "minimum":"(min)",
        "maximum":"(max)"
      },
      "keyboard": {
        "blink": "Blink a __myVar__",
        "brightness": "Change brightness of __myVar__",
        "increaseBrightness": "Increase brightness of __myVar__",
        "decreaseBrightness": "Decrease brightness of __myVar__",
        "isOff": "a __myVar__ is off",
        "isOff-keep": "a __myVar__ off",
        "isOn": "a __myVar__ is on",
        "isOn-keep": "a __myVar__ on",
        "turnOff": "Switch off a __myVar__",
        "turnOffEvt": "someone switches a __myVar__ off",
        "turnOn": "Switch on a __myVar__",
        "turnOnEvt": "someone switches a __myVar__ on",
        "lamp": "lamp"
      },
      "language": {
        "blink": "Blink __myVar__",
        "brightness": "Change brightness of __myVar__",
        "increaseBrightness": "Increase brightness of __myVar__",
        "decreaseBrightness": "Decrease brightness of __myVar__",
        "isOff": "__myVar__ is off",
        "isOff-keep": "__myVar__ off",
        "isOn": "__myVar__ is on",
        "isOn-keep": "__myVar__ on",
        "turnOff": "Switch off __myVar__",
        "turnOffEvt": "someone switches __myVar__ off",
        "turnOn": "Switch on lamp __myVar__",
        "turnOnEvt": "someone switches __myVar__ on"
      },
      "name": {
        "plural": "Philips Hue lamps",
        "singular": "Philips Hue lamp"
      },
      "status": {
        "turnedOff": "Off",
        "turnedOn": "On",
        "pairingRequired": "Press the buttom from PhilipsHue bridge."
      },
      "color-information": {
        "lastColor": "Last lamp's color ",
        "currentColor": "Current lamp's color "
      }
    },
    "mediaplayer": {
      "action": {
        "browse": "Browse",
        "pause": "Pause",
        "play": "Start",
        "resume": "Resume",
        "stop": "Stop",
        "audioNotification": "Play message",
        "volume": "Volume"
      },
      "name": {
        "plural": "Media Players",
        "singular": "Media Player"
      },
      "status": {
        "playing": "Now Playing",
        "selected": "Please select a media",
        "stopped": "Stopped",
        "PLAYING": "Now Playing : ",
        "PAUSED_PLAYBACK": "Paused : ",
        "NONE": "",
        "STOPPED": "Stopped : "
      },
      "language": {
        "increaseVolume": "Increase volume on ",
        "decreaseVolume": "Decrease volume on ",
        "volume-event": "volume has changed on player __myVar__",
        "play-event": "__myVar__ has started/resumed playing",
        "stop-event": "__myVar__ has stopped",
        "pause-event": "__myVar__ is paused",
        "audioNotification-action": "Play message",
        "pause-media-action": "Pause the media",
        "play-media-action": "Play",
        "resume-media-action": "Resume play",
        "set-volume-media-action": "Set the volume",
        "stop-media-action": "Stop"
      },
      "keyboard": {
        "no-browser" : "No media content",
        "increaseVolume": "Increase volume on __myVar__",
        "decreaseVolume": "Decrease volume on __myVar__",
        "volume-event": "The volume on a __myVar__ changes to __myVar2__",
        "audioNotification-action": "Play message __myVar__ on  __myVar2__",
        "play-event": "A __myVar__ has started/resumed playing",
        "stop-event": "A __myVar__ has stopped",
        "pause-event": "A __myVar__ is paused",
        "pause-action": "Pause the media on a __myVar__",
        "play-action": "Play",
        "resume-action": "Resume play",
        "set-volume-action": "Set the volume",
        "stop-action": "Stop",
        "browse": "Browse",
        "complement": "on",
        "media": "media",
        "player": "player",
        "value": "that value"
      }
    },
   "mobileTasker": {
		"name": {
			"singular" : "Mobile",
			"plural" : "Mobiles"
         },
		"language" : {
			"sendSMS" : "Send SMS from __myVar__",
			"whereIsMyPhone" : "Locate __myVar__",
			"vocalMessage" : "Say a message from __myVar__",
            "msgReceivedEvt" : "__myVar__ sends a message",
            "specificMsgReceivedEvt" : "__myVar__ sends a specific message",
            "dest" : "number",
            "message": "message"
		},
		"keyboard" : {
			"mobile" : "le mobile",
			"sendSMS" : "Send SMS from __myVar__",
			"whereIsMyPhone" : "Locate __myVar__",
			"vocalMessage" : "Say a message from __myVar__",
            "msgReceivedEvt" : "__myVar__ sends a message",
            "specificMsgReceivedEvt" : "__myVar__ sends a specific message"
		}
      },
    "movement": {
      "name": {
        "plural": "Motion sensors",
        "singular": "Motion sensor"
      }
    },
    "photo-label": {
      "plural": "Photos",
      "singular": "Photo"
    },
    "place-label": "Location",
    "tv": {
      "action": {
        "channelup": "TV, next channel",
        "channeldown": "TV, previous channel",
        "resume": "Resume TV",
        "pause": "Pause TV",
        "stop": "Stop TV",
        "notify": "Notify a message on TV"
      },
      "keyboard": {
        "channelup": "TV, next channel",
        "channeldown": "TV, previous channel",
        "resume": "Resume TV",
        "pause": "Pause TV",
        "stop": "Stop TV",
        "notify": "Notify a message on TV"
      },
      "language": {
        "channelup": "next channel on __myVar__",
        "channeldown": "previous channel on __myVar__",
        "resume": "Resume __myVar__",
        "pause": "Pause __myVar__",
        "stop": "Stop __myVar__",
        "notify": "Notify message",
        "ontv": "on __myVar__"
      },
      "name": {
        "plural": "TVs",
        "singular": "TV"
      }
    },
    "plug": {
      "action": {
        "turnOff": "Turn off",
        "turnOn": "Turn on",
        "turnAllOff": "Turn all off",
        "turnAllOn": "Turn all on"
      },
      "keyboard": {
        "plug": "Smart Plug",
        "change": "consumption of a __myVar__ changes",
        "get" : "consumption of a __myVar__",
        "isOff": "a __myVar__ is off",
        "isOff-keep": "a __myVar__ off",
        "isOn": "a __myVar__ is on",
        "isOn-keep": "a __myVar__ on",
        "turnOffEvt": "a __myVar__ is turned off",
        "turnOnEvt": "a __myVar__ is turned on",
        "turnOff": "Switch off a __myVar__",
        "turnOn": "Switch on a __myVar__"
      },
      "language": {
        "change": "consumption of __myVar__ changes",
        "get" : "consumption of __myVar__",
        "isOff": "__myVar__ is off",
        "isOff-keep": "__myVar__ off",
        "isOn": "__myVar__ is on",
        "isOn-keep": "__myVar__ on",
        "turnOffEvt": "__myVar__ is turned off",
        "turnOnEvt": "__myVar__ is turned on",
        "turnOff": "Switch off __myVar__",
        "turnOn": "Switch on __myVar__"
      },
      "name": {
        "plural": "Smart Plugs",
        "singular": "Smart Plug"
      },
      "status": {
        "turnedOff": "Off",
        "turnedOn": "On"
      }
    },
    "state-label": "State",
    "status": {
      "connected": "Paired",
      "disconnected": "Disconnected",
      "waiting": "Waiting"
    },
    "status-label": "Status",
    "sum": "Sum : ",
    "switch": {
      "keyboard": {
        "pushed-bottom": "someone pushes the lower part of __myVar__",
        "pushed-up": "someone pushes the upper part of __myVar__",
        "switch": "switch"
      },
      "language": {
        "pushed-bottom": "someone pushes the lower part of __myVar__",
        "pushed-up": "someone pushes the upper part of __myVar__"
      },
      "name": {
        "plural": "Switches",
        "singular": "Switch"
      },
      "value": {
        "closed": "Closed",
        "opened": "Open"
      }
    },
    "temperature": {
      "caption": {
        "extern": "External temperature sensor",
        "intern": "Internal temperature sensor"
      },
      "keyboard": {
        "get": "temperature measured by a __myVar__",
        "change": "temperature measured by a __myVar__ changes",
        "sensor": "sensor"
      },
      "language": {
        "get": "temperature measured by __myVar__",
        "change": "temperature of __myVar__ changes"
      },
      "name": {
        "plural": "Temperature sensors",
        "singular": "Temperature sensor"
      }
    },
    "co2": {
      "caption": {
        "intern": "CO2 Sensor",
        "temperature": "Temperature"
      },
      "keyboard": {
        "get": "the CO2 sensor __myVar__ indicates",
        "change": "CO2 measured by __myVar__ changes",
        "sensor": "CO2 Sensor"
      },
      "language": {
        "get": "the CO2 sensor __myVar__ indicates",
        "change": "CO2 measured by __myVar__ changes"
      },
      "name": {
        "plural": "CO2 Sensors",
        "singular": "CO2 Sensor"
      }
    },
    "fairylights": {
      "caption": {
      },
      "keyboard": {
      },
      "language": {
      },
      "name": {
        "plural": "Fairy Lights",
        "singular": "Fairy Lights"
      }
    },
    "type-label": "Type",
    "name-label": "Name",
    "id-label": "ID",
    "value-label": "Value"

  },
  "edit-name-modal": {
    "already-existing": "Name already exists.",
    "name": "Name",
    "name-empty": "The name must be specified.",
    "title": "Rename",
    "contains-html": "Name cannot contains html code"
  },
  "editbar": {
    "add": "Add",
    "redo": "Redo",
    "trashbin": "Trash",
    "undo": "Undo"
  },
  "editor": {
    "invalid-program-alert": "invalid program",
    "no-program-alert": "No program",
    "title": "Program Editor",
    "undo-last-action": "Cancel",
    "valid-program-alert": "invalid program"
  },
  "form": {
    "background-editor": "Background",
    "browse-button": "Browse",
    "cancel-button": "Cancel",
    "close-button": "Close",
    "delete-button": "Delete",
    "edit-button": "Edit",
    "enter-button": "Enter",
    "rename-button": "Rename",
    "save-button": "Save",
    "saving-button": "Saving ...",
    "size-editor": "Size",
    "size-height": "Height",
    "size-width": "Width",
    "valid-button": "Done",
	"show-dependencies-button": "Dependencies",
	"show-historic-button": "History"
  },
  "keyboard": {
    "clock-event": "AppsGate clock shows ",
    "clock-getTime": "It is ",
    "time-placeholder": "hh:mm:ss",
    "false": "False",
    "if-keyword": "If",
    "keep-state": "Keep state ...",
    "selector": {
      "prefix-f": " every ",
      "prefix-m": " every ",
      "type": {
        "1": "temperature sensor",
        "2": "light sensor",
        "21": "clock",
        "210": "domicube",
        "3": "switch",
        "4": "contact sensor",
        "5": "key card reader",
        "6": "plug",
        "7": "lamp",
        "8": "actuator",
        "31": "media player"
      }
    },
    "true": "True",
    "wait": "Wait ...",
    "when-keyword": "Each time",
    "whenImp-keyword": "As soon as",
    "while-keyword": "While"
  },
  "language": {
    "actions": "Actions",
    "and-when": "As soon as",
    "color": {
      "blue": "blue",
      "green": "green",
      "orange": "orange",
      "pink": "pink",
      "purple": "purple",
      "red": "red",
      "white": "white",
      "yellow": "yellow"
    },
    "clock-event": "AppsGate clock shows ",
    "clock-status": "AppsGate clock shows ",
    "clock-getTime": "It is ",
    "contact-assembled-event": "together",
    "contact-disassembled-event": "is disassembles",
    "else-keyword": "otherwise",
    "false": "false",
    "if-and": "if ... and ...",
    "if-dif": "is different from",
    "if-equals": "is",
    "if-inf": "is less than",
    "if-keyword": "if",
    "if-or": "if ... or ...",
    "if-sup": "is greater than",
    "is-assembled-contact-status": "closed",
    "is-disassembled-contact-status": "opened",
    "it-is-not-the-case": "it is not true anymore",
    "keep-keyword": "Keep",
    "keep-then": "Then",
    "mandatory-keyword": "Required",
    "mandatory-readonly": "...",
    "nothing-keyword": "Nothing",
    "only-once": "Only once",
    "op-and-bool": "and",
    "op-and-rule": "and",
    "op-event": "and",
    "op-event-bool": "and",
    "op-less-than": "less",
    "op-more-than": "more",
    "op-or-bool": "or",
    "op-then-rule": "then",
    "repeated": "Repeated",
    "rules": "Rules",
    "seconds": "seconds",
    "selector": {
      "all-places": "everywhere",
      "complement-selection-target": "of",
      "prefix-f": "every ",
      "prefix-m": "every ",
      "type": {
        "1": "temperature sensor",
        "2": "light sensor",
        "21": "clock",
        "210": "domicube",
        "3": "switch",
        "4": "contact sensor",
        "5": "key card reader",
        "6": "plug",
        "7": "lamp",
        "8": "actuator",
        "31": "media player"
      }
    },
    "then-keyword": "then",
    "true": "true",
    "wait": "Wait",
    "when-imp-keyword": "As soon as",
    "when-keyword": "Each time",
    "while-keyword": "While"
  },
  "login": {
    "confirm-password": "Password confirmation",
    "password": "Password",
    "username": "ID Name"
  },
  "modal" : {
    "name-too-long" : "Name too long"
  },
  "modal-add-place": {
    "place-already-existing": "Name of the existing room.",
    "place-name": "Place Name",
    "place-name-empty": "The name of the place must be filled.",
    "title": "New Place"
  },
  "modal-add-program": {
    "load-from-file": "Load from file",
    "name-already-existing": "Name of existing program",
    "name-empty": "The program name must be entered.",
    "name-label": "Name",
    "name-placeholder": "Program Name",
    "title": "New Program",
    "unable-to-parse": "Unable to read file"
  },
  "modal-edit-device": {
    "name-already-existing": "Name of existing device",
    "name-label": "Name",
    "name-placeholder": "Device Name",
    "place-label": "Place",
    "reset-clock": "Reset Clock"
  },
  "modal-test-program": {
    "time-label": "Time",
    "time-speed-label": "Speed"
  },
  "modal-edit-place": {
    "place-already-existing": "Name of the existing room.",
    "place-name": "Part Name",
    "place-name-empty": "The name of the place must be filled.",
    "title": "Rename item"
  },
  "modal-edit-program": {
    "program-already-existing": "Program name already existing.",
    "program-name": "Program name",
    "program-name-empty": "The program name must be entered.",
    "title": "Rename program"
  },
  "modal-schedule-program": {
    "title": "Schedule the program in AppsGate's Google Calendar",
    "schedule-activation": "Schedule the start of the program",
    "schedule-deactivation": "Schedule the stop of the program",
    "schedule-both": "Schedule start and stop of the program"
  },
  "modal-edit-service": {
    "name-already-existing": "Name of existing service",
    "name-label": "Name",
    "name-placeholder": "Service Name",
    "place-label": "Room"
  },
  "modal-lost-connection": {
    "change-server-button": "Change Server",
    "connection": "Connecting ...",
    "interrupted-connection": "The connection has been lost.",
    "reconnection-button": "Reconnect",
    "title": "Connection problem"
  },
  "modal-settings": {
    "addr-server": "Server Address",
    "connection": "Connecting ...",
    "language-en": "English",
    "language-fr": "French",
    "language-label": "Language",
    "server-unreachable": "Server unavailable ...",
    "title": "Preferences"
  },
  "navbar": {
    "button-settings": "Preferences",
    "debugger": "History",
    "dashboard": "Dashboard",
    "devices": "Devices",
    "dependancies": "Dependencies",
    "edit": "Edit",
    "emergency-stop": "Emergency stop",
    "home": "Sweet Home",
    "places": "Places",
    "programs": "Programs",
    "services": "Services",
    "stop-edit": "Done",
    "users": "Users"
  },
  "places-details": {
    "body": {
      "device-no-name": "Device unnamed",
      "no-device-in-place": "No device in this room."
    },
    "header": {
      "consumption-label": "Total current consumption :",
      "device-number-title": "Total number of devices in the place :",
      "illumination-label": "Brightness",
      "temperature-label": "Temperature"
    },
    "no-plugs": "No plugs",
    "place-no-name": "Item unnamed",
    "undefined": "Undefined",
    "warning-place-delete": "Do you really want to delete this place ?"
  },
  "places-menu": {
    "add-button": "New Place",
    "place-no-name": "Item unnamed",
    "unlocated-devices": "Devices not assigned to places"
  },
  "programs": {
    "action": {
      "start": "Start",
      "stop": "Stop",
      "schedule": "Schedule",
      "open-calendar": "Go to Calendar",
      "test": "Test",
      "end-test": "Stop testing"
    },
    "delete-program": "Delete",
    "edit-program": "Edit",
    "end-edit-program": "Done",
    "error" : {
      "empty" : "Program is empty",
      "node" : "Syntax invalid",
      "device" : "At least one of the devices referenced by this program is missing",
      "missingProgram" : "At least one of the programs referenced by this program is missing",
	  "invalidProgram" : "At least one of the programs referenced by this program is not valid",
	  "emptySelec" : "At least one of the selector of this program is empty",
      "noMessage" : "Unexpected error"

	},
    "keyboard": {
      "actionActivate": "Start a __myVar__",
      "actionDisactivate": "Stop a __myVar__",
      "actionDisactivate-self": "Stop myself",
      "eventStart": "A __myVar__ is started",
      "eventStop": "A __myVar__ is stopped",
      "stateStarted": "A __myVar__ is started",
      "stateStarted-keep": "A __myVar__ started",
      "stateStopped": "A __myVar__ is stopped",
      "stateStopped-keep": "A __myVar__ stopped",
      "program": "program"
    },
    "language": {
      "actionActivate": "Start __myVar__",
      "actionDisactivate": "Stop __myVar__",
      "actionDisactivate-self": "Stop myself",
      "eventStart": "__myVar__ is started",
      "eventStop": "__myVar__ is stopped",
      "stateStarted": "__myVar__ is started",
      "stateStarted-keep": "__myVar__ started",
      "stateStopped": "__myVar__ is stopped",
      "stateStopped-keep": "__myVar__ stopped"
    },
    "program-no-name": "Program with no name",
    "state": {
      "deployed": "Program activable",
      "invalid": "Program invalid",
      "incomplete": "Program partially activable",
      "limping": "Program partially activated",
      "processing": "Program activated"
    },
    "warning-program-edition": "Warning, editing a program will deactivate it",
    "warning-program-delete": "Do you really want to delete this program ?",
    "scheduled-event": "Appsgate program ",
    "simulated-time": "Simulated-time",
    "inactive-node": "This instruction won't be executed.",
	"invalid" : "This program is invalid",
	"absent" : "Program has been deleted",
	"missing" : "Unknown program",
	"incomplete" : "This program is partially activable"
  },
  "programs-menu": {
    "add-button": "New Program",
    "deactivate-all-programs": "Stop all programs"
  },
  "services": {
    "avtransport": {
      "name": {
        "plural": "AV Transport",
        "singular": "AV Transport"
      }
    },
    "connectionManager": {
      "name": {
        "plural": "Connection Managers",
        "singular": "Connection Manager"
      }
    },
    "consumption-label": "Consumption",
    "contentdirectory": {
      "name": {
        "plural": "Content Directories",
        "singular": "Content Directory"
      }
    },
    "device-no-name": "Device unnamed",
    "device-unlocated": "Not located",
    "energy-monitoring" : {
      "keyboard": {
        "energyChanged": "La consommation cumulée du __myVar__ change",
        "resetMonitoring": "Réinitialiser la consommation et le budget du __myVar__",
        "startMonitoring": "Démarrer la mesure de consommation du __myVar__",
        "stopMonitoring": "Arrêter la mesure de consommation du __myVar__",
        "getEnergyDuringTimePeriod": "La consommation cumulée du __myVar__",
        "getRemainingBudget": "Le budget restant du __myVar__",
        "group": "groupe"
      },
      "language": {
        "energyChanged": "la consommation électrique cumulée du __myVar__ change",
        "resetMonitoring": "Réinitaliser la consommation et le budget du __myVar__",
        "startMonitoring": "Démarrer la mesure de consommation du __myVar__",
        "stopMonitoring": "Arrêter la mesure de consommation du __myVar__",
        "resetMonitoring": "réinitialiser la consommation et le budget du __myVar__",
        "getEnergyDuringTimePeriod": "La consommation cumulée du __myVar__",
        "getRemainingBudget": "Le budget restant du __myVar__",
        "group": "groupe"
      },
      "name" : {
        "singular" : "Suivi d'énergie",
        "plural" : "Suivi d'énergie"
      },
      "add-button" : "Nouveau groupe de suivi d'énergie",
      "remove-button" : "Supprimer",
      "start-button" : "Démarrer",
      "stop-button" : "Arrêter",
      "edit-button" : "Editer",
      "total-consumption" : "Consommation totale",
      "budget" : {
        "name" : "Budget",
        "allocated" : "Budget alloué",
        "used" : "Budget utilisé",
        "left" : "Budget restant"
      },
      "modal-add" : {
        "title" : "New budget",
        "placeholder" : {
          "name" : "Nom du groupe de suivi d'énergie",
          "budget" : "Spécifier votre budget"
        },
        "devices" : {
          "title" : "Pour les équipements :",
          "all" : "All smartplugs"
    }
  },
  "unit" : "Units"
    },
    "mail": {
      "keyboard": {
        "sendMail": "Send a mail",
        "mailSent": "mail is sent"
      },
      "language": {
        "body": "Content",
        "dest": "to",
        "subject": "whose subject is",
        "sendMail": "Send mail"
      },
      "name": {
        "plural": "Mail",
        "singular": "Mail"
      },
      "modal": {
        "add": "New favorite mail",
        "valid-mail": "Please choose a valid mail address",
        "title": "Favorite mail"
      },
      "warning-delete": "Do you really want to delete this mail address ?"
    },
    "mediabrowser": {
      "name": {
        "plural": "Media Servers",
        "singular": "Media Server"
      }
    },
    "place-label": "Location",
    "renderingControl": {
      "name": {
        "plural": "Rendering controls",
        "singular": "Rendering Control"
      }
    },
    "state-label": "State",
    "status": {
      "connected": "Connected",
      "disconnected": "Disconnected",
      "waiting": "Waiting"
    },
    "status-label": "Status",
    "type-label": "Type",
    "unknown": "Unknown",
    "value-label": "Value",
    "weather": {
      "name": {
        "plural": "Weather forecast places",
        "singular": "Weather forecast place"
      },
      "modal": {
        "title": "Creation of a weather forecast place",
        "add": "New weather forecast place"
      },
      "keyboard": {
        "sunrise": "The sun rises in __myVar__",
        "sunset": "The sun sets in __myVar__",
        "currently-daylight": "it is daytime in __myVar__",
        "currently-moonlight": "it is nightime in __myVar__",
        "forecast-temperature": "the announced temperature in __myVar__  for __myVar2__ is __myVar3__",
        "forecast-weather-code-state": "the announced weather in __myVar__ for __myVar2__ is __myVar3__",
        "favorite": "weather forecast place",
        "moment": "that day",
        "weather": "that weather",
        "temperature": "max/min that value"
      },
      "language": {
        "forecast-temperature": "",
        "forecast": "expected in",
        "sunrise": "the sun rise in __myVar__",
        "sunset": "the sun set in __myVar__",
        "currently-daylight": "it is daytime in ",
        "currently-moonlight": "it is nightime in ",
        "forecast-weather-code-state": "expected weather in",
        "is-current-weather-code-state": "current weather",
        "is-forecast-weather-code-state": "expected weather in",
        "weather-at": "",
        "typical-code-0": "minimum temperature",
        "typical-code-1": "maximum temperature",
        "typical-code-2": "average temperature",
        "weather-code-0": "sunny",
        "weather-code-1": "cloudy",
        "weather-code-2": "rainy",
        "weather-code-3": "snowy",
        "weather-code-4": "stormy",
        "weather-code-5": "foggy",
        "weather-code-6": "other",
        "weather-code-7": "unusual weather",
        "weather-code-verb": "forecast",
        "weather-for-0": "today",
        "weather-for-1": "tomorrow",
        "weather-for-2": "after tomorrow"
      },
      "weblink": "Watch weather",
      "warning-weather-delete": "Do you really want to delete this meteo place ?"
    },
    "tts": {
      "name": {
        "plural": "Text-To-Speech",
        "singular": "Text-To-Speech"
      },
      "notification": {
        "message": "Message",
        "voice": "Voice"
      },
      "control": {
        "choose-message": "Choose a message",
        "existing": "Existing notifications",
        "delete": "Delete",
        "test": "Test",
        "add": "Add a new notification",
        "use-voice": "Use voice",
        "from": "from",
        "Male": "Male",
        "Female": "Female",
        "slow": "slow",
        "fast": "fast",
        "inprogress": "Generating Text To Speech..."
      },
      "lang": {
        "English": "English",
        "French": "French",
        "German": "German",
        "Spanish": "Spanish"
      }
    }
  },
  "adapters": {
    "id-label" : "ID",
    "type-label" : " Type",
    "status": {
      "connected": "Connected",
      "disconnected": "Disconnected",
      "waiting": "Waiting"
    },
    "enocean": {
      "control": {
        "no-item": "No EnOcean device paired",
        "start-pairing": "Start Pairing mode",
        "stop-pairing": "Stop Pairing mode",
        "choose-profile": "Choose a profile",
        "validate": " Validate",
        "unpair": " Unpair"
      },
     "name": {
        "plural": "EnOcean Drivers",
        "singular": "EnOcean Driver"
      }
    },
    "weather": {
      "name": {
        "plural": "Weather Services",
        "singular": "Weather Service"
      }
    }
  }
}
